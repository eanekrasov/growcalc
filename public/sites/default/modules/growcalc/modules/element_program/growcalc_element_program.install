<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 */


/**
 * Implements hook_schema().
 */
function growcalc_element_program_schema() {
  $schema = array();

  $schema['growcalc_element_program'] = array(
    'description' => 'The base table for growcalc_element_program entities.',
    'fields' => array(
      'growcalc_element_program_id' => array(
        'description' => 'Primary Key: Identifier for a growcalc_element_program.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {growcalc_element_program_type}.type of this growcalc_element_program.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The language of the growcalc_element_program.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The name of the growcalc_element_program - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'The description of the growcalc_element_program',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'atomic_mass' => array(
        'description' => 'Atomic mass',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'oxidation' => array(
        'description' => 'Oxidation',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the element_program is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'color' => array(
        'description' => 'element_program color.',
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the growcalc_element_program was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the growcalc_element_program was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('growcalc_element_program_id'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  $schema['growcalc_element_program_type'] = array(
    'description' => 'Stores information about defined growcalc_element_program types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique growcalc_element_program type identifier.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this growcalc_element_program type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this growcalc_element_program type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this growcalc_element_program type in relation to others.',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this growcalc_element_program type.',
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function growcalc_element_program_install() {
  // Create the basic growcalc element_program type.
  $growcalc_element_program_type = growcalc_element_program_type_create(array(
    'type' => 'growcalc_element_program',
    'label' => t('Element program'),
    'weight' => 0,
    'data' => '',
    'status' => 1,
    'module' => 'growcalc_element_program',
    'is_new' => TRUE
  ));

  growcalc_element_program_type_save($growcalc_element_program_type);

  // During installation, the t() function is unavailable, so we use get_t()
  // to store the name of the translation function.
  $t = get_t();

  // Create all the fields we are adding to our content type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_growcalc_element_program_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  // http://api.drupal.org/api/function/field_create_instance/7
  foreach (_growcalc_element_program_installed_instances() as $instance) {
    field_create_instance($instance);
  }
}

function _growcalc_element_program_installed_fields() {
  $t = get_t();
  return array(
    'growcalc_element_program' => array(
      'field_name' => 'growcalc_element_program',
      'cardinality' => 1,
      'type'        => 'entityreference',
      'settings'    => array( 'target_type' => 'growcalc_element_program', ),
    ),

    'growcalc_element_stages' => array(
      'field_name' => 'growcalc_element_stages',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'field_collection',
      'settings'    => array(),
    ),
    'stage_name' => array(
      'field_name' => 'stage_name',
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(),
    ),
    'growcalc_stage_elements' => array(
      'field_name' => 'growcalc_stage_elements',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'field_collection',
      'settings'    => array(),
    ),
    'position' => array(
      'field_name' => 'position',
      'cardinality' => 1,
      'type'        => 'number_integer',
      'settings'    => array(),
    ),
  );
}

function _growcalc_element_program_installed_instances() {
  $t = get_t();
  return array(
    'growcalc_element_stages' => array(
      'field_name'  => 'growcalc_element_stages',
      'entity_type' => 'growcalc_element_program',
      'bundle'      => 'growcalc_element_program',
      'label'       => $t('Element stages'),
      'widget'      => array(
        'type'      => 'field_collection_embed',
      ),
    ),
    'stage_name' => array(
      'field_name'  => 'stage_name',
      'entity_type' => 'field_collection_item',
      'bundle'      => 'growcalc_element_stages',
      'label'       => $t('Name'),
      'widget'      => array(
        'type'      => 'text_textfield',
      ),
      'required' => TRUE,
    ),
    'position' => array(
      'field_name'  => 'position',
      'entity_type' => 'field_collection_item',
      'bundle'      => 'growcalc_element_stages',
      'label'       => $t('Position'),
      'widget'      => array(
        'type'      => 'number',
      ),
      //'required' => TRUE,
    ),
    'growcalc_stage_elements' => array(
      'field_name'  => 'growcalc_stage_elements',
      'entity_type' => 'field_collection_item',
      'bundle'      => 'growcalc_element_stages',
      'label'       => $t('Stage elements'),
      'widget'      => array(
        'type'      => 'field_collection_embed',
      ),
    ),
    'amount' => array(
      'field_name'  => 'amount',
      'entity_type' => 'field_collection_item',
      'bundle'      => 'growcalc_stage_elements',
      'label'       => $t('Amount'),
      'widget'      => array(
        'type'      => 'number',
      ),
      'required' => TRUE,
    ),
    'growcalc_element' => array(
      'field_name'  => 'growcalc_element',
      'entity_type' => 'field_collection_item',
      'bundle'      => 'growcalc_stage_elements',
      'label'       => $t('Element'),
      'widget'      => array(
        'type'      => 'options_select',
      ),
      'required' => TRUE,
    ),
  );
}


/*
 * Implements hook_uninstall().
 */
function growcalc_element_program_uninstall() {
  foreach (array_reverse(_growcalc_element_program_installed_instances()) as $installed_instance) {
    $instances = field_info_instances($installed_instance['entity_type'], $installed_instance['bundle']);
    foreach ($instances as $instance_name => $instance) {
      if ($instance_name == $installed_instance['field_name']) {
        field_delete_instance($instance);
      }
    }
  }

  foreach (array_keys(array_reverse(_growcalc_element_program_installed_fields())) as $field) {
    field_delete_field($field);
  }

  field_purge_batch(1000);
  
  // At uninstall time we'll notify field.module that the entity was deleted
  // so that attached fields can be cleaned up.
  field_attach_delete_bundle('growcalc_element_program' , 'growcalc_element_program');
}
